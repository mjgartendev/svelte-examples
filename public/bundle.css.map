{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Navbar.svelte",
    "..\\src\\Sidebar.svelte",
    "..\\src\\Pages\\Markdown.svelte",
    "..\\src\\Pages\\Kanban.svelte",
    "..\\src\\Pages\\Code.svelte",
    "..\\src\\Components\\Monaco.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport {onMount} from 'svelte';\n\timport Navbar from './Navbar.svelte';\n\timport Sidebar from './Sidebar.svelte';\n\timport Footer from './Footer.svelte';\n\timport Home from './Pages/Home.svelte';\n\timport routes from './Pages/routes';\n\n\texport let sidebarMini;\n\texport let sidebarShow;\n\tlet pages = routes;\n\tlet active = {component: Home};\n</script>\n\n<Navbar \n\titems={[\n\t\t{name: \"home\", to: \".\"},\n\t\t{name: \"docs\", to: \"docs\"},\n\t\t{name: \"blog\", to: \"blog\"}\n]}>\n\t<div>\n\t\t<span class=\"fas fa-bars\" on:click={()=> sidebarShow = !sidebarShow}></span>\n\t\t{#if sidebarMini}\n\t\t\t<span on:click={() => sidebarMini = false} class=\"fas fa-angle-right\"></span>\n\t\t{:else}\n\t\t\t<span on:click={() => sidebarMini = true} class=\"fas fa-angle-left\"></span>\n\t\t{/if}\n\t</div>\n\t<span>Svelte Template</span>\n</Navbar>\t\n\n<Sidebar\n\tbind:active\n\tmini={sidebarMini}\t\n\tshow={sidebarShow} \n\tlinks={pages}/>\n\n<main id=\"main\" class=\"flex-center fluid\">\n\t\t<svelte:component this={active.component}></svelte:component>\n</main>\n\n<Footer></Footer>\n\n<svelte:head>\n\t<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css\" rel=\"stylesheet\">\n</svelte:head>\n\n<style>\n\t  *, *::before, *::after {box-sizing: border-box}\n</style>",
    "<header id=\"top\" class=\"bg-primary fg-light flex-row\">\n  <slot />\n  <nav class=\"flex-row\">\n  {#each items as item}\n    <a class=\"fg-light\" href={item.to}>{item.name}</a>\n  {/each}\n  </nav>\n</header>\n\n<script>\n  export let items;\n</script>\n\n<style>\n  header {\n    padding: 0 1rem; \n    font-weight: bold\n  }\n  a {\n    padding: 1rem;\n  }\n  a:hover {\n    background: var(--color-light);\n    color: var(--color-primary);\n  }\n  :global(span) {\n    padding: .5rem;\n    font-size: 1.25rem;\n    cursor: pointer;\n  }\n</style>",
    "{#if show}\n<aside id=\"left\" class:mini class=\"flex-col bg-grey shadow\">\n  {#each links as link}\n    <a on:click|preventDefault={() => active = link} class:active={link == active} class=\"flex-row round\" href={link.to} alt={link.name}>\n      <span class=\"fas fa-{link.icon}\"></span>\n      {#if !mini}\n        {link.name}\n      {/if}\n    </a>\n  {/each}\n</aside>\n{/if}\n<svelte:window on:popstate={handlePopstate}/>\n<script>\n  export let mini = true;\n  export let show = true;\n  export let links;\n  export let active;\n  //$: {\n    //self.history.pushState({}, '', active.to);\n  //}\n  function handlePopstate(e){\n    active = links.find(l => l.to == e.path[0].location.pathname)\n  }\n</script>\n\n<style>\n  aside {\n    border: 1px solid var(--color-grey); \n    padding: 4px;\n  }\n  a {\n    font-weight: bold;\n    color: var(--color-dark);\n    padding: .75rem .75rem;\n    justify-content: flex-start;\n  }\n  a:hover {\n    background: var(--color-light);\n  }\n  .active {\n    color: var(--color-primary);\n  }\n  .mini {\n    max-width: 100px;\n  }\n  span {\n    color: var(--dark); \n    padding: .75rem;\n  }\n</style>",
    "<svelte:head>\r\n<title>Svelte Examples | Markdown</title>\r\n</svelte:head>\r\n\r\n<div>\r\n  <section>\r\n  <Monaco \r\n    language=\"markdown\"\r\n    value={value}\r\n    name=\"markdown\"\r\n    on:keyup={(e) => value = e.target.value}\r\n  />\r\n</section>\r\n  <section>\r\n    {@html marked(value)}\r\n  </section>\r\n</div>\r\n\r\n<script>\r\n  import Monaco from '../Components/Monaco.svelte'\r\n  import marked from 'marked'\r\n  let value = \"# Hello marked\";\r\n</script>\r\n\r\n<style>\r\ndiv {\r\n  height: 100%; \r\n  width: 100%;\r\n  display: grid; \r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n*, *::before, *::after {box-sizing: border-box}\r\n\r\n</style>",
    "<script>\r\n  import {onMount} from 'svelte';\r\n\r\n  let cards = [\r\n    {title: \"one\", list: \"todo\"},\r\n    {title: \"two\", list: \"todo\"},\r\n    {title: \"three\", list: \"doing\"},\r\n    {title: \"four\", list: \"doing\"},\r\n    {title: \"five\", list: \"done\"},\r\n    {title: \"six\", list: \"done\"}\r\n  ]\r\n  $: console.log(cards)\r\n  let lists = [];\r\n  $: getLists = () => {\r\n    let unique = new Set();\r\n    cards.map(card => unique.add(card.list));\r\n    lists = [...unique]\r\n  }\r\n\r\n  onMount(() => getLists())\r\n</script>\r\n\r\n<div class=\"bg-light flex-center\">\r\n  {#each lists as list}\r\n    <section class=\"flex-column bg-grey round\">\r\n      <h3>{list}</h3>\r\n      <ul>\r\n        {#each cards as card}\r\n          {#if card.list == list}\r\n            <li class=\"fg-dark shadow round flex-row\">\r\n              {card.title}\r\n              <input class=\"bg-light round\" placeholder={card.list} on:keydown={(e) => {\r\n                if(e.key == \"Enter\"){\r\n                  {card.list = e.target.value};\r\n                  e.target.value = \"\";\r\n                  getLists()\r\n                }\r\n              }}/>\r\n            </li>\r\n          {/if}\r\n        {/each}\r\n      </ul>\r\n      <input class=\"bg-light round\" placeholder=\"add card\" on:keydown={(e) => {\r\n        if(e.key == \"Enter\"){\r\n          cards = [...cards, {title: e.target.value, list: list}]\r\n          e.target.value = \"\"\r\n        }\r\n      }}/>\r\n    </section>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  div{\r\n    justify-content: flex-start;\r\n    padding: 1rem;\r\n  }\r\n  section {\r\n    margin: .25rem 1rem;\r\n    align-self: flex-start;\r\n    padding: 1rem;\r\n    border: 1px solid var(--color-light);\r\n  }\r\n  h3{\r\n    margin: 0;\r\n  }\r\n  li{\r\n    list-style: none; \r\n    background: white; \r\n    padding: .5rem 1rem;\r\n    margin-bottom: .5rem;\r\n    min-width: 200px;\r\n  }\r\n  li input {\r\n    width: 40%;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    padding: .25rem;\r\n    text-align: center;\r\n    border: 1px solid var(--color-light);\r\n  }\r\n  ul{\r\n   padding: 0;\r\n  }\r\n  *, *::before, *::after{\r\n    box-sizing:border-box\r\n  }\r\n</style>",
    "<svelte:head>\r\n<title>Svelte Examples | Markdown</title>\r\n</svelte:head>\r\n\r\n<div>\r\n  <section>\r\n    <Monaco \r\n      name=\"html\"\r\n      value={html}\r\n      language=\"html\"\r\n      on:keyup={(e) => html = e.target.value}\r\n    />\r\n  </section>\r\n  <section>\r\n    {@html html}\r\n  </section>\r\n</div>\r\n\r\n<script>\r\n  import Monaco from '../Components/Monaco.svelte';\r\n  let html = \"<h1>Hello Monaco!</h1>\";\r\n  $: console.log(html);\r\n</script>\r\n\r\n<style>\r\n    div {\r\n      height: 100%; \r\n      width: 100%;\r\n      display: grid; \r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    *, *::before, *::after {box-sizing: border-box}\r\n    \r\n</style>",
    "<div on:keyup on:change on:input id={name}></div>\r\n\r\n<style>\r\n  div {\r\n    font-family: Monaco;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  *, *::before, *::after {box-sizing: border-box}\r\n</style>\r\n<script>\r\n  import {onMount} from 'svelte'\r\n  export let theme = 'vs-dark';\r\n  export let language = 'html';\r\n  export let value = \"\";\r\n  export let name;\r\n  let editor;\r\n  onMount(() => { \r\n    editor = monaco.editor.create(document.getElementById(name),{\r\n      value: [value].join('/n'),\r\n      language: language,\r\n      theme: theme,\r\n      dragAndDrop: true,\r\n      fontWeight: '500',\r\n      highlightActiveIndentGuide: true,\r\n      lineNumbersMinChars: 2,\r\n      showFoldingControls: \"always\",\r\n      tabCompletion: \"on\",\r\n      automaticLayout: true\r\n    });\r\n  });\r\n</script>"
  ],
  "names": [],
  "mappings": "AAgDG,cAAC,CAAE,cAAC,QAAQ,CAAE,cAAC,OAAO,AAAC,CAAC,UAAU,CAAE,UAAU,CAAC;AClChD,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,WAAW,CAAE,IAAI;EACnB,CAAC,AACD,CAAC,eAAC,CAAC,AACD,OAAO,CAAE,IAAI,AACf,CAAC,AACD,gBAAC,MAAM,AAAC,CAAC,AACP,UAAU,CAAE,IAAI,aAAa,CAAC,CAC9B,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AACO,IAAI,AAAE,CAAC,AACb,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,OAAO,CAClB,MAAM,CAAE,OAAO,AACjB,CAAC;ACFD,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,CACnC,OAAO,CAAE,GAAG,AACd,CAAC,AACD,CAAC,eAAC,CAAC,AACD,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,YAAY,CAAC,CACxB,OAAO,CAAE,MAAM,CAAC,MAAM,CACtB,eAAe,CAAE,UAAU,AAC7B,CAAC,AACD,gBAAC,MAAM,AAAC,CAAC,AACP,UAAU,CAAE,IAAI,aAAa,CAAC,AAChC,CAAC,AACD,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,MAAM,CAAC,CAClB,OAAO,CAAE,MAAM,AACjB,CAAC;ACxBH,GAAG,cAAC,CAAC,AACH,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,AAChC,CAAC,AACD,cAAC,CAAE,cAAC,QAAQ,CAAE,cAAC,OAAO,AAAC,CAAC,UAAU,CAAE,UAAU,CAAC;ACsB7C,iBAAG,CAAC,AACF,eAAe,CAAE,UAAU,CAC3B,OAAO,CAAE,IAAI,AACf,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,MAAM,CAAC,IAAI,CACnB,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AACtC,CAAC,AACD,gBAAE,CAAC,AACD,MAAM,CAAE,CAAC,AACX,CAAC,AACD,gBAAE,CAAC,AACD,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,KAAK,CAAC,IAAI,CACnB,aAAa,CAAE,KAAK,CACpB,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,gBAAE,CAAC,KAAK,cAAC,CAAC,AACR,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AACtC,CAAC,AACD,gBAAE,CAAC,AACF,OAAO,CAAE,CAAC,AACX,CAAC,AACD,cAAC,CAAE,cAAC,QAAQ,CAAE,cAAC,OAAO,CAAC,AACrB,WAAW,UAAU;EACvB,CAAC;AC9DC,GAAG,cAAC,CAAC,AACH,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,AAChC,CAAC,AACD,cAAC,CAAE,cAAC,QAAQ,CAAE,cAAC,OAAO,AAAC,CAAC,UAAU,CAAE,UAAU,CAAC;AC5BjD,GAAG,eAAC,CAAC,AACH,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACX,CAAC,AACD,eAAC,CAAE,eAAC,QAAQ,CAAE,eAAC,OAAO,AAAC,CAAC,UAAU,CAAE,UAAU,CAAC"
}